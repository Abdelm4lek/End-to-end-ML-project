services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    env_file: .env
    environment:
      - ALLOWED_ORIGINS=${WEB_ORIGIN}
    expose:
      - "8000"
    healthcheck:
      test: >
        CMD-SHELL python -c "import urllib.request,sys; sys.exit(0 if urllib.request.urlopen('http://127.0.0.1:8000/health', timeout=5).getcode()==200 else 1)"
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    volumes:
      - artifacts:/app/artifacts
      - logs:/app/logs
    restart: unless-stopped
    networks: [webnet]
    mem_limit: 512m
    cpus: "0.50"

  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: streamlit
    env_file: .env
    environment:
      - API_BASE_URL=http://api:8000
    expose:
      - "8501"
    healthcheck:
      test: >
        CMD-SHELL python -c "import urllib.request,sys; sys.exit(0 if urllib.request.urlopen('http://127.0.0.1:8501/', timeout=5).getcode()==200 else 1)"
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    volumes:
      - artifacts:/app/artifacts
      - logs:/app/logs
    restart: unless-stopped
    networks: [webnet]
    mem_limit: 512m
    cpus: "0.50"

  caddy:
    image: caddy:2
    depends_on: [api, web]
    env_file: .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped
    networks: [webnet]

networks:
  webnet:

volumes:
  artifacts:
  logs:
  caddy_data:
  caddy_config: